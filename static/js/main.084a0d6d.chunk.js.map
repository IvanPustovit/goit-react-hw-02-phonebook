{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["ContactForm","handleChangeName","nameValue","numberValue","handleChangeNumber","addToContacts","contactsId","className","classes","form","htmlFor","name","id","type","value","onChange","onClick","Filter","handleChangeNameFilter","filterContacts","ContactList","contacts","deleteContact","length","map","el","key","number","delete","App","state","filter","notifyA","toast","notifyB","e","preventDefault","newContacts","shortid","generate","find","contact","setState","prev","inputHandlerContact","target","getFilterContacts","toLocaleLowerCase","includes","ContactListNew","isContact","some","this","filteredContacts","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.084a0d6d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport classes from \"./ContactForm.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst ContactForm = ({\r\n  handleChangeName,\r\n  nameValue,\r\n  numberValue,\r\n  handleChangeNumber,\r\n  addToContacts,\r\n  contactsId,\r\n}) => {\r\n  return (\r\n    <div className={classes.form}>\r\n      <form>\r\n        <label className={classes[\"label-name\"]} htmlFor={contactsId}>\r\n          Name\r\n          <input\r\n            name=\"name\"\r\n            id={contactsId}\r\n            type=\"text\"\r\n            value={nameValue}\r\n            onChange={handleChangeName}\r\n          />\r\n        </label>\r\n\r\n        <label className={classes[\"label-name\"]}>\r\n          Number\r\n          <input\r\n            name=\"number\"\r\n            type=\"text\"\r\n            value={numberValue}\r\n            onChange={handleChangeNumber}\r\n          />\r\n        </label>\r\n\r\n        <div>\r\n          <button type=\"text\" onClick={addToContacts}>\r\n            Add contact\r\n          </button>\r\n          <ToastContainer />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nContactForm.propTypes = {\r\n  handleChangeName: PropTypes.func.isRequired,\r\n  handleChangeNumber: PropTypes.func.isRequired,\r\n  nameValue: PropTypes.string.isRequired,\r\n  numberValue: PropTypes.string.isRequired,\r\n  addToContacts: PropTypes.func.isRequired,\r\n  contactsId: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ handleChangeNameFilter, filterContacts }) => {\r\n  return (\r\n    <div>\r\n      <p>Find contacts by name</p>\r\n      <input\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        onChange={handleChangeNameFilter}\r\n        // onInputCapture={filterContacts}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  handleChangeNameFilter: PropTypes.func.isRequired,\r\n  filterContacts: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classes from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, filterContacts, deleteContact }) => {\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {filterContacts.length\r\n          ? filterContacts.map(el => (\r\n              <li key={el.name}>\r\n                {el.name} : {el.number}\r\n                <button\r\n                  type=\"button\"\r\n                  id={el.id}\r\n                  className={classes.delete}\r\n                  onClick={() => {\r\n                    deleteContact(el.id);\r\n                  }}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </li>\r\n            ))\r\n          : contacts.map(el => (\r\n              <li key={el.name}>\r\n                {el.name} : {el.number}\r\n                <button\r\n                  type=\"button\"\r\n                  id={el.id}\r\n                  className={classes.delete}\r\n                  onClick={() => {\r\n                    deleteContact(el.id);\r\n                  }}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </li>\r\n            ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  filterContacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport shortid from \"shortid\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n\n    filter: \"\",\n    name: \"\",\n    number: \"\",\n  };\n  notifyA = () => toast(\"Enter name and number\");\n  notifyB = () => {\n    const { name } = this.state;\n    toast(`${name} is already in contacts`);\n  };\n\n  addToContacts = (e) => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const newContacts = { name: name, number: number, id: shortid.generate() };\n\n    if (\n      this.state.contacts.find((contact) => contact.name === this.state.name)\n    ) {\n      this.notifyB();\n    } else {\n      this.setState((prev) => ({ contacts: [...prev.contacts, newContacts] }));\n    }\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  inputHandlerContact = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  getFilterContacts = (filter, contacts) =>\n    contacts.filter(({ name }) =>\n      name.toLocaleLowerCase().includes(filter.toLocaleLowerCase()),\n    );\n\n  deleteContact = (id) => {\n    const { contacts } = this.state;\n    const ContactListNew = contacts.filter((el) => el.id !== id);\n\n    this.setState({\n      contacts: ContactListNew,\n    });\n  };\n\n  isContact = (e) => {\n    const { name, contacts } = this.state;\n    return contacts.some(\n      (el) => el.name.toLocaleLowerCase() === name.toLocaleLowerCase(),\n    );\n  };\n\n  contactsId = shortid.generate();\n  render() {\n    const { name, number, contacts, filter } = this.state;\n    const filteredContacts = this.getFilterContacts(\n      this.state.filter,\n      this.state.contacts,\n    );\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm\n          handleChangeName={this.inputHandlerContact}\n          nameValue={name}\n          numberValue={number}\n          handleChangeNumber={this.inputHandlerContact}\n          addToContacts={this.addToContacts}\n          contactsId={this.contactsId}\n          isContact={this.isContact}\n        />\n\n        <h2>Contacts</h2>\n        <Filter\n          handleChangeNameFilter={this.inputHandlerContact}\n          // filterContacts={this.filterContacts}\n          contacts={contacts}\n          filter={filter}\n        />\n        <ContactList\n          contacts={contacts}\n          filterContacts={filteredContacts}\n          deleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__GrARc\",\"label-name\":\"ContactForm_label-name__h42Nr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"delete\":\"ContactList_delete__Qp8I6\"};"],"sourceRoot":""}